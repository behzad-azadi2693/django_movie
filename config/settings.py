"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

from django.core.checks.messages import Debug

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(_w=!c@)+)+fm%_#2k8%^phl&a5vyp^zt&v4icatwee&*nas&b'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #local
    'movie.apps.MovieConfig',
    'accounts.apps.AccountsConfig',    
    'api.apps.ApiConfig',    
    #3rd
    'django_user_agents',
    'django.contrib.sitemaps',
    'rest_framework',
    'rest_framework.authtoken'

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #3rd
    'django_user_agents.middleware.UserAgentMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
if DEBUG == True:
    ALLOWED_HOSTS = []

    DATABASES = {
       'default': {},
        'movie_db': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'movie.sqlite3',
        },
        'message_db':{
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'message.sqlite3',
        }
    }
else:
    ALLOWED_HOSTS = ['freefilm.com', 'www.freefilm.com']

    DATABASES = {
        'default':{},
        'movie_db': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'movie',
            'PASSWORD': 'admin',
            'USER': 'admin',
            'PORT': 5432,
            'HOST': 'postgres1_container',
        },
        'message_db':{
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'message',
            'PASSWORD': 'admin',
            'USER': 'admin',
            'PORT': 5432,
            'HOST': 'postgres2_container',
        },
    }

DATABASE_ROUTERS = ['db_routers.routers.MovieDb','db_routers.routers.MessageDb']
if DEBUG:
    CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/11",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
        }
    }
else:
    CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://redis_container/1",
        "OPTIONS": {
            "PASWORD":"admin",
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
        }
    }

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en'

LANGUAGES = (
    ('fa', 'persian'),
    ('en', 'English'),
)

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


#this is for translate 
LOCALE_PATHS = ( os.path.join(BASE_DIR, 'locale'), )


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
STATIC_URL = '/static/'

STATIC_ROOT = os.path.join('static')

STATICFILES_DIRS = [
    os.path.join('assets'),
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join('media')
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


LOGIN_URL = 'accounts:phone'

AUTH_USER_MODEL='accounts.User'

AUTHENTICATION_BACKEND = (
    'accounts.authentiacte.PhoneLoginBackend',
)


#settings for email
if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
    EMAIL_USE_TLS = True
    EMAIL_HOST = 'smtp.gmail.com'
    EMAIL_HOST_USER = 'youremail@gmail.com'
    EMAIL_HOST_PASSWORD = 'email_password'
    EMAIL_PORT = 587
else:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_USE_TLS = True
    EMAIL_HOST = 'smtp.gmail.com'
    EMAIL_HOST_USER = 'youremail@gmail.com'
    EMAIL_HOST_PASSWORD = 'email_password'
    EMAIL_PORT = 587


#REST_FRAMEWORK = {
#    'DEFAULT_AUTHENTICATION_CLASSES':[
#        'rest_framework.authentication.SessionAuthentication'
#    ]
#}
